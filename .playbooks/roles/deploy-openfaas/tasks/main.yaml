---
# main task file for roles/deploy-openfaas

- name: add {{ helm_repository_name }} repo
  kubernetes.core.helm_repository:
    name: "{{ helm_repository_name }}"
    repo_url: "{{ helm_repository_url }}"

- name: uninstall {{ app_namespace }}/{{ app_name }}
  kubernetes.core.helm:
    release_namespace: "{{ app_namespace }}"
    release_name: "{{ app_name }}"
    state: absent
    wait: yes
  ignore_errors: yes

- name: create manifests directory for deployment
  become: false
  file:
    path: "/home/{{ default_user }}/.kube/manifests/{{ app_name }}"
    state: directory

- name: copy manifests
  become: false
  copy:
    src: files/
    dest: "/home/{{ default_user }}/.kube/manifests/{{ app_name }}/"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: "0700"

- name: create namespaces
  shell: k3s kubectl apply -f "/home/{{ default_user }}/.kube/manifests/{{ app_name }}/namespaces.yaml"

- name: deploy {{ app_namespace }}/{{ app_name }}
  kubernetes.core.helm:
    chart_ref: "{{ helm_chart_ref }}"
    create_namespace: no
    release_namespace: "{{ app_namespace }}"
    release_name: "{{ app_name }}"
    values_files:
      - /home/{{ default_user }}/.kube/manifests/{{ app_name }}/values.yaml
    update_repo_cache: yes
    atomic: yes
    wait: yes

- name: create ingress
  shell: k3s kubectl apply -f "/home/{{ default_user }}/.kube/manifests/{{ app_name }}/ingress.yaml"

- name: wait for {{ app_namespace }}/{{ app_name }} pods to come up
  shell: k3s kubectl wait --namespace {{ app_namespace }} --for=condition=ready pods --all --timeout=500s
  become: yes

- name: get credentials
  shell: "PWD=$(k3s kubectl --namespace {{ app_namespace }} get secret basic-auth -o jsonpath=\"{.data.basic-auth-password}\" | base64 --decode); echo $PWD"
  register: PWD
  changed_when: false

- name: print credentials
  debug:
    msg: "OpenFaaS password: {{ PWD.stdout }}"
